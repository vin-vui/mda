name: Discord Notifications

on:
  push:
    branches: ['**']
  pull_request:
    types: ['opened', 'reopened', 'closed', 'merged', 'edited', 'synchronize']
    branches: ['**']
  issues:
    types: ['opened', 'edited', 'deleted', 'transferred', 'pinned', 'unpinned', 'closed', 'reopened', 'assigned', 'unassigned', 'labeled', 'unlabeled', 'locked', 'unlocked', 'milestoned', 'demilestoned']
  issue_comment:
    types: ['created', 'edited', 'deleted']
  fork:
  create:
  delete:
  release:
    types: ['published', 'unpublished', 'created', 'edited', 'deleted', 'prereleased', 'released']
  deployment:
  deployment_status:
  public:
  member:
    types: ['added', 'deleted', 'edited']
  milestone:
    types: ['created', 'closed', 'opened', 'edited', 'deleted']
  workflow_dispatch:

jobs:
  notify_discord:
    runs-on: ubuntu-latest
    steps:
      - name: Installer jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Envoyer une notification à Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_EVENT: ${{ toJson(github.event) }}
        run: |
          set -e
          MESSAGE=""
          EMBED_TITLE=""
          EMBED_DESCRIPTION=""
          EMBED_URL=""
          AVATAR_URL=$(echo "$GITHUB_EVENT" | jq -r '.sender.avatar_url')

          # Couleur par défaut (bleu Discord)
          EMBED_COLOR=$((0x7289DA))

          if [ "$GITHUB_EVENT_NAME" = "push" ]; then
            BRANCH=$(echo "$GITHUB_REF" | sed 's/refs\/heads\///')
            COMMITS=$(echo "$GITHUB_EVENT" | jq '.commits | length')
            COMMIT_MSG=$(echo "$GITHUB_EVENT" | jq -r '.head_commit.message')
            COMMIT_URL=$(echo "$GITHUB_EVENT" | jq -r '.head_commit.url')
            AUTHOR_NAME=$(echo "$GITHUB_EVENT" | jq -r '.head_commit.author.name')
            EMBED_TITLE="Nouveau push sur \`$BRANCH\` par $AUTHOR_NAME"
            EMBED_URL="$COMMIT_URL"
            EMBED_DESCRIPTION="**Message du commit :** $COMMIT_MSG"
            # Couleur verte
            EMBED_COLOR=$((0x00FF00))

          elif [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            PR_NUMBER=$(echo "$GITHUB_EVENT" | jq '.number')
            PR_TITLE=$(echo "$GITHUB_EVENT" | jq -r '.pull_request.title')
            PR_URL=$(echo "$GITHUB_EVENT" | jq -r '.pull_request.html_url')
            PR_ACTION=$(echo "$GITHUB_EVENT" | jq -r '.action')
            EMBED_TITLE="Pull Request #$PR_NUMBER $PR_TITLE"
            EMBED_URL="$PR_URL"
            EMBED_DESCRIPTION="**Action :** $PR_ACTION\n**Auteur :** $GITHUB_ACTOR"
            # Couleur bleue
            EMBED_COLOR=$((0x0000FF))

          elif [ "$GITHUB_EVENT_NAME" = "issues" ]; then
            ISSUE_NUMBER=$(echo "$GITHUB_EVENT" | jq '.issue.number')
            ISSUE_TITLE=$(echo "$GITHUB_EVENT" | jq -r '.issue.title')
            ISSUE_URL=$(echo "$GITHUB_EVENT" | jq -r '.issue.html_url')
            ISSUE_ACTION=$(echo "$GITHUB_EVENT" | jq -r '.action')
            EMBED_TITLE="Issue #$ISSUE_NUMBER $ISSUE_TITLE"
            EMBED_URL="$ISSUE_URL"
            EMBED_DESCRIPTION="**Action :** $ISSUE_ACTION\n**Auteur :** $GITHUB_ACTOR"
            # Couleur orange
            EMBED_COLOR=$((0xFFA500))

          elif [ "$GITHUB_EVENT_NAME" = "issue_comment" ]; then
            ISSUE_NUMBER=$(echo "$GITHUB_EVENT" | jq '.issue.number')
            ISSUE_TITLE=$(echo "$GITHUB_EVENT" | jq -r '.issue.title')
            ISSUE_URL=$(echo "$GITHUB_EVENT" | jq -r '.issue.html_url')
            COMMENT_BODY=$(echo "$GITHUB_EVENT" | jq -r '.comment.body')
            EMBED_TITLE="Nouveau commentaire sur l'issue #$ISSUE_NUMBER $ISSUE_TITLE"
            EMBED_URL="$ISSUE_URL"
            EMBED_DESCRIPTION="$COMMENT_BODY"
            # Couleur jaune
            EMBED_COLOR=$((0xFFFF00))

          else
            EMBED_TITLE="Événement $GITHUB_EVENT_NAME"
            EMBED_DESCRIPTION="**Auteur :** $GITHUB_ACTOR"
            # Couleur blanche
            EMBED_COLOR=$((0xFFFFFF))
          fi

          # Construction du payload JSON pour l'embed
          PAYLOAD=$(jq -n \
            --arg username "GitHub Bot" \
            --arg avatar_url "$AVATAR_URL" \
            --arg title "$EMBED_TITLE" \
            --arg url "$EMBED_URL" \
            --arg description "$EMBED_DESCRIPTION" \
            --argjson color "$EMBED_COLOR" \
            '{username: $username, avatar_url: $avatar_url, embeds: [{title: $title, url: $url, description: $description, color: $color}]}')

          # Envoi du payload au webhook Discord
          curl -X POST -H "Content-Type: application/json" -d "$PAYLOAD" "$DISCORD_WEBHOOK_URL"
